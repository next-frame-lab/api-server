name: API Server CD

#on:
#  push:
#    branches:
#      - main

on:
  push:
    branches:
      - chore-ci-ci-workflow-modify

jobs:
  # 첫 번째 작업: 어떤 모듈의 파일이 변경되었는지 감지합니다.
  changes:
    runs-on: ubuntu-latest
    outputs:
      # 이 작업의 결과를 다른 작업에서 사용할 수 있도록 'outputs'으로 정의합니다.
      payment: ${{ steps.filter.outputs.payment_any_changed }}
      srt: ${{ steps.filter.outputs.srt_any_changed }}
    steps:
      - name: 레포지토리 체크아웃
        uses: actions/checkout@v4
        with:
          # Git 히스토리를 모두 가져와서 변경된 파일을 정확히 비교할 수 있도록 합니다.
          fetch-depth: 0

      # tj-actions/changed-files 액션을 사용하여 변경된 파일을 감지합니다.
      - name: 변경된 파일 감지
        id: filter # 이 스텝의 결과를 'filter'라는 ID로 참조할 수 있습니다.
        uses: tj-actions/changed-files@v42
        with:
          # 감지할 모듈과 파일 경로를 지정합니다.
          files_yaml: |
            payment:
              - payment/**
            srt:
              - schedule-reservation-ticketing/**
          # 마지막 원격 커밋 이후의 변경사항을 기준으로 감지합니다.
          since_last_remote_commit: true

  payment-cd:
    # 'changes' 작업이 성공적으로 완료되어야 이 작업을 시작합니다.
    needs: changes
    # 'changes' 작업의 출력값 'payment'가 'true'일 때만 이 작업을 실행합니다. (조건부 실행)
    if: needs.changes.outputs.payment == 'true'
    runs-on: ubuntu-latest

    env:
      APP_DIR: '~/next-frame/app/payment-api'
      JAR_NAME: 'payment.jar'

    steps:
      - name: 소스 코드 체크아웃
        uses: actions/checkout@v4

      - name: JDK 21 설치
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Gradle 실행 권한 부여
        run: chmod +x ./gradlew

      - name: payment 모듈 빌드
        run: ./gradlew :payment:build -x test

      - name: SSH Agent 셋업
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Bastion 서버 연결 테스트
        run: |
          ssh -o StrictHostKeyChecking=no ${{secrets.BASTION_USER}}@${{secrets.BASTION_HOST}} -p ${{ secrets.BASTION_PORT }} "echo \"Bastion 중간 서버 연결 성공\""

      - name: 빌드 파일 애플리케이션 서버로 복사
        run: |
          scp -o StrictHostKeyChecking=no \
              -J ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }}:${{ secrets.BASTION_PORT }} \
              payment/build/libs/*-SNAPSHOT.jar \
              ${{ secrets.DAISY04_USER }}@${{ secrets.DAISY04_HOST }}:${{ env.APP_DIR }}/

      - name: 애플리케이션 서버에 변경 사항 적용
        run: |
          ssh -o StrictHostKeyChecking=no \
              -J ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }}:${{ secrets.BASTION_PORT }} \
              ${{ secrets.DAISY04_USER }}@${{ secrets.DAISY04_HOST }} '
              mv ${{ env.APP_DIR }}/*-SNAPSHOT.jar ${{ env.APP_DIR }}/payment.jar &&
              sudo systemctl restart nextframe-payment
          '

  srt-cd:
    # 'changes' 작업이 성공적으로 완료되어야 이 작업을 시작합니다.
    needs: changes
    # 'changes' 작업의 출력값 'schedule-reservation-ticketing'가 'true'일 때만 이 작업을 실행합니다. (조건부 실행)
    if: needs.changes.outputs.srt == 'true'
    runs-on: ubuntu-latest

    env:
      APP_DIR: '~/next-frame/app/srt-api'
      JAR_NAME: 'schedule-reservation-ticketing.jar'

    steps:
      - name: 소스 코드 체크아웃
        uses: actions/checkout@v4

      - name: JDK 21 설치
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Gradle 실행 권한 부여
        run: chmod +x ./gradlew

      - name: schedule-reservation-ticketing 모듈 빌드
        run: ./gradlew :schedule-reservation-ticketing:build -x test

      - name: SSH Agent 설정
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Bastion 서버 연결 테스트
        run: |
          ssh -o StrictHostKeyChecking=no ${{secrets.BASTION_USER}}@${{secrets.BASTION_HOST}} -p ${{ secrets.BASTION_PORT }} "echo \"Bastion 중간 서버 연결 성공\""

      - name: 빌드 파일 애플리케이션 서버로 복사
        run: |
          scp -o StrictHostKeyChecking=no \
              -J ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }}:${{ secrets.BASTION_PORT }} \
              schedule-reservation-ticketing/build/libs/*-SNAPSHOT.jar \
              ${{ secrets.DAISY04_USER }}@${{ secrets.DAISY04_HOST }}:${{ env.APP_DIR }}/


      - name: 애플리케이션 서버에 변경 사항 적용
        run: |
          ssh -o StrictHostKeyChecking=no \
              -J ${{ secrets.BASTION_USER }}@${{ secrets.BASTION_HOST }}:${{ secrets.BASTION_PORT }} \
              ${{ secrets.DAISY04_USER }}@${{ secrets.DAISY04_HOST }} '
              mv ${{ env.APP_DIR }}/*-SNAPSHOT.jar ${{ env.APP_DIR }}/schedule-reservation-ticketing.jar &&
              sudo systemctl restart nextframe-srt
            '