name: API Server CI

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

jobs:
  # 첫 번째 작업: 어떤 모듈의 파일이 변경되었는지 감지합니다.
  changes:
    runs-on: ubuntu-latest
    outputs:
      # 이 작업의 결과를 다른 작업에서 사용할 수 있도록 'outputs'으로 정의합니다.
      payment: ${{ steps.filter.outputs.payment_any_changed }}
      srt: ${{ steps.filter.outputs.srt_any_changed }}
    steps:
      - name: 레포지토리 체크아웃
        uses: actions/checkout@v4
        with:
          # Git 히스토리를 모두 가져와서 변경된 파일을 정확히 비교할 수 있도록 합니다.
          fetch-depth: 0

      # tj-actions/changed-files 액션을 사용하여 변경된 파일을 감지합니다.
      - name: 변경된 파일 감지
        id: filter # 이 스텝의 결과를 'filter'라는 ID로 참조할 수 있습니다.
        uses: tj-actions/changed-files@v42
        with:
          # 감지할 모듈과 파일 경로를 지정합니다.
          files_yaml: |
            payment:
              - payment/**
            srt:
              - schedule-reservation-ticketing/**
          # 마지막 원격 커밋 이후의 변경사항을 기준으로 감지합니다.
#          since_last_remote_commit: true

  # 두 번째 작업: 'payment' 모듈의 CI를 실행합니다.
  payment-ci:
    # 'changes' 작업이 성공적으로 완료되어야 이 작업을 시작합니다.
    needs: changes
    # 'changes' 작업의 출력값 'payment'가 'true'일 때만 이 작업을 실행합니다. (조건부 실행)
    if: needs.changes.outputs.payment == 'true'
    # 재사용 워크플로우를 호출합니다.
    uses: ./.github/workflows/reusable-build.yml
    with:
      # 재사용 워크플로우에 필요한 입력값(input)을 전달합니다.
      module-name: 'payment'
      module-path: 'payment'
    # 재사용 워크플로우에 필요한 시크릿(secret)을 전달합니다.
    secrets:
      APPLICATION_YML: ${{ secrets.PAYMENT_APPLICATION_YML }}
      APPLICATION_DEV_YML: ${{ secrets.PAYMENT_APPLICATION_DEV_YML }}
      APPLICATION_DEV_DB_YML: ${{ secrets.PAYMENT_APPLICATION_DEV_DB_YML }}
      APPLICATION_TEST_YML: ${{ secrets.PAYMENT_APPLICATION_TEST_YML }}

  srt-ci:
    needs: changes
    if: needs.changes.outputs.srt == 'true'
    uses: ./.github/workflows/reusable-build.yml
    with:
      module-name: 'schedule-reservation-ticketing'
      module-path: 'schedule-reservation-ticketing'
    secrets:
      APPLICATION_YML: ${{ secrets.SRT_APPLICATION_YML }}
      APPLICATION_DEV_MAIL_YML: ${{ secrets.SRT_APPLICATION_DEV_MAIL_YML }}
      APPLICATION_DEV_DB_YML: ${{ secrets.SRT_APPLICATION_DEV_DB_YML }}
      APPLICATION_TEST_YML: ${{ secrets.SRT_APPLICATION_TEST_YML }}